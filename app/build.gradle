plugins {
    alias(libs.plugins.android.application)
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

def geminiApiKey = localProperties.getProperty("GEMINI_API_KEY", "")

android {
    namespace 'com.zambranomainarjavier.fctzambranomainar'
    compileSdk 35

    defaultConfig {
        applicationId "com.zambranomainarjavier.fctzambranomainar"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "GEMINI_API_KEY", "\"${geminiApiKey}\""
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation 'com.google.android.material:material:1.10.0'

    // Implementar dependencias de OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    // Dependencias necesarias para la clase ApiServicio.java
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.json:json:20231013'
    // Dependencias necesarias para el uso de Glide en la clase EmpresaAdapter.java
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'

}